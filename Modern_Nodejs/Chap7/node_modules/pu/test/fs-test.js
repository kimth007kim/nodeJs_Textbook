"use strict";

const pu = require(__dirname + "/../index.js");

function run(assert, done) {

	var fs = require("fs");
	var sfd = "sync";
	var sfn = sfd + "/test.txt";
	var sfn2 = sfd + "/moved.txt";

	pu.write(sfn, "content");
	assert(fs.existsSync(sfn), "write + mkdir (sync)");

	var content = pu.read(sfn);
	assert(content.toString() == "content", "read (sync)");

	pu.mv(sfn, sfn2);
	assert(fs.existsSync(sfn2), "mv (sync)");

	assert(pu.isdir(sfd), "isdir (sync)");

	var files = pu.dir(sfd);
	assert(files && files.length > 0, "dir (sync)");

	var found = pu.where("moved.txt", ["sync"]);
	assert(found, "where");

	var afd = "async";
	var afn = afd + "/test.txt";
	var afn2 = afd + "/moved.txt";

	pu.write(afn, "content", function(err) {
		assert(!err && fs.existsSync(afn), "write + mkdir (async)");

		pu.read(afn, function(err, buf) {
			assert(!err && buf.toString() == "content", "read (async)");

			pu.byline(afn, (line) => {
				assert(line == "content", "byline");
			}, function() {

				pu.mv(afn, afn2, function(err) {
					assert(!err && fs.existsSync(afn2), "mv (async)");

					pu.isdir(afd, function(err, is) {
						assert(is && !err, "isdir (async)");

						var list = pu.walk(".");
						assert(list && list.length > 0, "walk");

						pu.rm(afd, function(err) {
							assert(!err && !fs.existsSync(afd), "rm (async)");

							pu.rm(sfd);
							assert(!fs.existsSync(sfd), "rm (sync)");

							done();
						});
					});
				});
			});
		});
	});
}

process.env.test ? exports.run = run : run(require("assert"), err => err ? console.error(err) : null);